version: '3.8'

services:
  ingestion-api:
    build:
      context: ./ingestion-api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/plant_monitoring
      - TZ=Europe/Paris
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ferme-network

  db:
    build:
      context: ./database
    environment:
      - POSTGRES_DB=plant_monitoring
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d plant_monitoring"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 40s
    networks:
      - ferme-network

  sensor1:
    build: ./sensor
    environment:
      - SERVER_URL=http://ingestion-api:8000/ingest
      - SENSOR_ID=1
      - PLANT_ID=1
      - TZ=Europe/Paris
    depends_on:
      ingestion-api:
        condition: service_started
    networks:
      - ferme-network

  detection:
    build: ./detection
    environment:
      - DB_HOST=db
      - DB_NAME=plant_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - TZ=Europe/Paris
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ferme-network

  dashboard:
    build: ./dashboard
    ports:
      - "8502:8501"
    environment:
      - TZ=Europe/Paris
    networks:
      - ferme-network

volumes:
  pgdata:

networks:
  ferme-network:
    name: ferme-network
    driver: bridge
    attachable: true
